---
# The cleanup tasks might be useful to experiment with BIRD configs and erase them after that
# Run with:
#   ansible-playbook play.yml --tags [never,cleanup]
# To run together with the new configs
#   ansible-playbook play.yml --tags [never,config,cleanup]
- name: Find existing files /etc/bird/*.conf
  find:
    paths: /etc/bird
    patterns: "*.conf"
  register: conf
  tags:
    - never
    - cleanup

- name: Delete existing files /etc/bird/*.conf
  file:
    path: "{{ item['path'] }}"
    state: absent
  with_items: "{{ conf['files'] }}"
  tags:
    - never
    - cleanup
    
- name: Template BIRD config to /etc/bird.conf
  ansible.builtin.template:
    src: templates/bird.conf.j2
    dest: /etc/bird/bird.conf
    owner: bird
    group: bird
    mode: '0755'
  notify:
    - Reload bird.service
  tags:
   - config

# - name: 
  # ansible.builtin.debug:
    # msg: "{{ pr.name }}"
  # loop: "{{ bgp_peers }}"
  # loop_control:
    # loop_var: pr

- name: Template per peer configs to /etc/bird/bgp_*.conf
  ansible.builtin.template:
    src: templates/bgp_peer.j2
    dest: /etc/bird/bgp_{{ tags.Name + '_to_' + peer.name }}.conf
    owner: bird
    group: bird
    mode: '0755'
  loop: "{{ bgp_peers_ipv4 }}"
  loop_control:
    loop_var: peer
  notify:
    - Reload bird.service
  tags:
   - config

- name: Template per peer configs to /etc/bird/static_lo.conf
  ansible.builtin.template:
    src: templates/static.j2
    dest: /etc/bird/static_lo.conf
    owner: bird
    group: bird
    mode: '0755'
  notify:
    - Reload bird.service
  tags:
   - config
